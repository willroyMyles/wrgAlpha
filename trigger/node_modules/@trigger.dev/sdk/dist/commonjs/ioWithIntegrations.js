"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createIOWithIntegrations = createIOWithIntegrations;
function createIOWithIntegrations(io, auths, integrations) {
    if (!integrations) {
        return io;
    }
    const connections = Object.entries(integrations).reduce((acc, [connectionKey, integration]) => {
        let auth = auths?.[connectionKey];
        acc[connectionKey] = {
            integration,
            auth,
        };
        return acc;
    }, {});
    return new Proxy(io, {
        get(target, prop, receiver) {
            // We can return the original io back if the prop is __io
            if (prop === "__io") {
                return io;
            }
            if (typeof prop === "string" && prop in connections) {
                // @ts-expect-error
                const { integration, auth } = connections[prop];
                return integration.cloneForRun(io, prop, auth);
            }
            const value = Reflect.get(target, prop, receiver);
            return typeof value == "function" ? value.bind(target) : value;
        },
    });
}
//# sourceMappingURL=ioWithIntegrations.js.map