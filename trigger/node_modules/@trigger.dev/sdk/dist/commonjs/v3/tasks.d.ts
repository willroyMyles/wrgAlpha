import { InitOutput } from "@trigger.dev/core/v3";
import { batchTrigger, batchTriggerAndWait, trigger, triggerAndPoll, triggerAndWait, SubtaskUnwrapError } from "./shared.js";
export { SubtaskUnwrapError };
import type { TaskOptions, Task, Queue, RunHandle, BatchRunHandle, TaskRunResult, BatchResult, BatchItem, TaskPayload, TaskOutput, TaskIdentifier, TaskRunOptions, AnyTask } from "./shared.js";
export type { TaskOptions, Task, Queue, RunHandle, BatchRunHandle, TaskRunResult, BatchResult, BatchItem, TaskPayload, TaskOutput, TaskIdentifier, TaskRunOptions, AnyTask, };
/** Creates a task that can be triggered
 * @param options - Task options
 * @example
 *
 * ```ts
 * import { task } from "@trigger.dev/sdk/v3";
 *
 * export const helloWorld = task({
    id: "hello-world",
 *    run: async (payload: { url: string }) => {
 *    return { hello: "world" };
 *  },
 * });
 *
 * ```
 *
 * @returns A task that can be triggered
 */
export declare function task<TIdentifier extends string, TInput = void, TOutput = unknown, TInitOutput extends InitOutput = any>(options: TaskOptions<TIdentifier, TInput, TOutput, TInitOutput>): Task<TIdentifier, TInput, TOutput>;
export declare const tasks: {
    trigger: typeof trigger;
    triggerAndPoll: typeof triggerAndPoll;
    batchTrigger: typeof batchTrigger;
    triggerAndWait: typeof triggerAndWait;
    batchTriggerAndWait: typeof batchTriggerAndWait;
};
