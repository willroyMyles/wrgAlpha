import { JSONOutputSerializer } from "../io.js";
export class KeyValueStoreClient {
    queryStore;
    type;
    namespace;
    #serializer = new JSONOutputSerializer();
    constructor(queryStore, type = null, namespace = "") {
        this.queryStore = queryStore;
        this.type = type;
        this.namespace = namespace;
    }
    #namespacedKey(key) {
        const parts = [];
        if (this.type) {
            parts.push(this.type);
        }
        if (this.namespace) {
            parts.push(this.namespace);
        }
        parts.push(key);
        return parts.join(":");
    }
    async delete(key) {
        const result = await this.queryStore("DELETE", {
            key: this.#namespacedKey(key),
        });
        if (result.action !== "DELETE") {
            throw new Error(`Unexpected key-value store response: ${result.action}`);
        }
        return result.deleted;
    }
    async get(key) {
        const result = await this.queryStore("GET", {
            key: this.#namespacedKey(key),
        });
        if (result.action !== "GET") {
            throw new Error(`Unexpected key-value store response: ${result.action}`);
        }
        return this.#serializer.deserialize(result.value);
    }
    async has(key) {
        const result = await this.queryStore("HAS", {
            key: this.#namespacedKey(key),
        });
        if (result.action !== "HAS") {
            throw new Error(`Unexpected key-value store response: ${result.action}`);
        }
        return result.has;
    }
    async set(key, value) {
        const result = await this.queryStore("SET", {
            key: this.#namespacedKey(key),
            value: this.#serializer.serialize(value),
        });
        if (result.action !== "SET") {
            throw new Error(`Unexpected key-value store response: ${result.action}`);
        }
        return this.#serializer.deserialize(result.value);
    }
}
//# sourceMappingURL=keyValueStoreClient.js.map