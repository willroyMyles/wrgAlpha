import { z } from "zod";
export declare const ErrorWithStackSchema: z.ZodObject<{
    message: z.ZodString;
    name: z.ZodOptional<z.ZodString>;
    stack: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    message: string;
    name?: string | undefined;
    stack?: string | undefined;
}, {
    message: string;
    name?: string | undefined;
    stack?: string | undefined;
}>;
export type ErrorWithStack = z.infer<typeof ErrorWithStackSchema>;
export declare const SchemaErrorSchema: z.ZodObject<{
    path: z.ZodArray<z.ZodString, "many">;
    message: z.ZodString;
}, "strip", z.ZodTypeAny, {
    path: string[];
    message: string;
}, {
    path: string[];
    message: string;
}>;
export type SchemaError = z.infer<typeof SchemaErrorSchema>;
