import { z } from "zod";
export declare const TaskStatusSchema: z.ZodEnum<["PENDING", "WAITING", "RUNNING", "COMPLETED", "ERRORED", "CANCELED"]>;
export type TaskStatus = z.infer<typeof TaskStatusSchema>;
export declare const TaskSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    icon: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    noop: z.ZodBoolean;
    startedAt: z.ZodNullable<z.ZodOptional<z.ZodDate>>;
    completedAt: z.ZodNullable<z.ZodOptional<z.ZodDate>>;
    delayUntil: z.ZodNullable<z.ZodOptional<z.ZodDate>>;
    status: z.ZodEnum<["PENDING", "WAITING", "RUNNING", "COMPLETED", "ERRORED", "CANCELED"]>;
    description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    properties: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
        label: z.ZodString;
        text: z.ZodString;
        url: z.ZodOptional<z.ZodString>;
        imageUrl: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }, {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }>, "many">>>;
    outputProperties: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
        label: z.ZodString;
        text: z.ZodString;
        url: z.ZodOptional<z.ZodString>;
        imageUrl: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }, {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }>, "many">>>;
    params: z.ZodNullable<z.ZodOptional<z.ZodType<import("./json.js").DeserializedJson, z.ZodTypeDef, import("./json.js").DeserializedJson>>>;
    output: z.ZodNullable<z.ZodOptional<z.ZodType<import("./json.js").DeserializedJson, z.ZodTypeDef, import("./json.js").DeserializedJson>>>;
    context: z.ZodNullable<z.ZodOptional<z.ZodType<import("./json.js").DeserializedJson, z.ZodTypeDef, import("./json.js").DeserializedJson>>>;
    error: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    parentId: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    style: z.ZodNullable<z.ZodOptional<z.ZodObject<{
        style: z.ZodEnum<["normal", "minimal"]>;
        variant: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        style: "normal" | "minimal";
        variant?: string | undefined;
    }, {
        style: "normal" | "minimal";
        variant?: string | undefined;
    }>>>;
    operation: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    callbackUrl: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    childExecutionMode: z.ZodNullable<z.ZodOptional<z.ZodEnum<["SEQUENTIAL", "PARALLEL"]>>>;
}, "strip", z.ZodTypeAny, {
    status: "PENDING" | "WAITING" | "RUNNING" | "COMPLETED" | "ERRORED" | "CANCELED";
    name: string;
    id: string;
    noop: boolean;
    icon?: string | null | undefined;
    startedAt?: Date | null | undefined;
    completedAt?: Date | null | undefined;
    delayUntil?: Date | null | undefined;
    description?: string | null | undefined;
    properties?: {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }[] | null | undefined;
    outputProperties?: {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }[] | null | undefined;
    params?: import("./json.js").DeserializedJson | undefined;
    output?: import("./json.js").DeserializedJson | undefined;
    context?: import("./json.js").DeserializedJson | undefined;
    error?: string | null | undefined;
    parentId?: string | null | undefined;
    style?: {
        style: "normal" | "minimal";
        variant?: string | undefined;
    } | null | undefined;
    operation?: string | null | undefined;
    callbackUrl?: string | null | undefined;
    childExecutionMode?: "SEQUENTIAL" | "PARALLEL" | null | undefined;
}, {
    status: "PENDING" | "WAITING" | "RUNNING" | "COMPLETED" | "ERRORED" | "CANCELED";
    name: string;
    id: string;
    noop: boolean;
    icon?: string | null | undefined;
    startedAt?: Date | null | undefined;
    completedAt?: Date | null | undefined;
    delayUntil?: Date | null | undefined;
    description?: string | null | undefined;
    properties?: {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }[] | null | undefined;
    outputProperties?: {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }[] | null | undefined;
    params?: import("./json.js").DeserializedJson | undefined;
    output?: import("./json.js").DeserializedJson | undefined;
    context?: import("./json.js").DeserializedJson | undefined;
    error?: string | null | undefined;
    parentId?: string | null | undefined;
    style?: {
        style: "normal" | "minimal";
        variant?: string | undefined;
    } | null | undefined;
    operation?: string | null | undefined;
    callbackUrl?: string | null | undefined;
    childExecutionMode?: "SEQUENTIAL" | "PARALLEL" | null | undefined;
}>;
export declare const ServerTaskSchema: z.ZodObject<{
    params: z.ZodNullable<z.ZodOptional<z.ZodType<import("./json.js").DeserializedJson, z.ZodTypeDef, import("./json.js").DeserializedJson>>>;
    status: z.ZodEnum<["PENDING", "WAITING", "RUNNING", "COMPLETED", "ERRORED", "CANCELED"]>;
    error: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    context: z.ZodNullable<z.ZodOptional<z.ZodType<import("./json.js").DeserializedJson, z.ZodTypeDef, import("./json.js").DeserializedJson>>>;
    name: z.ZodString;
    id: z.ZodString;
    style: z.ZodNullable<z.ZodOptional<z.ZodObject<{
        style: z.ZodEnum<["normal", "minimal"]>;
        variant: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        style: "normal" | "minimal";
        variant?: string | undefined;
    }, {
        style: "normal" | "minimal";
        variant?: string | undefined;
    }>>>;
    icon: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    noop: z.ZodBoolean;
    startedAt: z.ZodNullable<z.ZodOptional<z.ZodDate>>;
    completedAt: z.ZodNullable<z.ZodOptional<z.ZodDate>>;
    delayUntil: z.ZodNullable<z.ZodOptional<z.ZodDate>>;
    description: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    properties: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
        label: z.ZodString;
        text: z.ZodString;
        url: z.ZodOptional<z.ZodString>;
        imageUrl: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }, {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }>, "many">>>;
    outputProperties: z.ZodNullable<z.ZodOptional<z.ZodArray<z.ZodObject<{
        label: z.ZodString;
        text: z.ZodString;
        url: z.ZodOptional<z.ZodString>;
        imageUrl: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }, {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }>, "many">>>;
    output: z.ZodNullable<z.ZodOptional<z.ZodType<import("./json.js").DeserializedJson, z.ZodTypeDef, import("./json.js").DeserializedJson>>>;
    parentId: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    operation: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    callbackUrl: z.ZodNullable<z.ZodOptional<z.ZodString>>;
    childExecutionMode: z.ZodNullable<z.ZodOptional<z.ZodEnum<["SEQUENTIAL", "PARALLEL"]>>>;
    idempotencyKey: z.ZodString;
    attempts: z.ZodNumber;
    forceYield: z.ZodNullable<z.ZodOptional<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    status: "PENDING" | "WAITING" | "RUNNING" | "COMPLETED" | "ERRORED" | "CANCELED";
    name: string;
    id: string;
    noop: boolean;
    idempotencyKey: string;
    attempts: number;
    params?: import("./json.js").DeserializedJson | undefined;
    error?: string | null | undefined;
    context?: import("./json.js").DeserializedJson | undefined;
    style?: {
        style: "normal" | "minimal";
        variant?: string | undefined;
    } | null | undefined;
    icon?: string | null | undefined;
    startedAt?: Date | null | undefined;
    completedAt?: Date | null | undefined;
    delayUntil?: Date | null | undefined;
    description?: string | null | undefined;
    properties?: {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }[] | null | undefined;
    outputProperties?: {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }[] | null | undefined;
    output?: import("./json.js").DeserializedJson | undefined;
    parentId?: string | null | undefined;
    operation?: string | null | undefined;
    callbackUrl?: string | null | undefined;
    childExecutionMode?: "SEQUENTIAL" | "PARALLEL" | null | undefined;
    forceYield?: boolean | null | undefined;
}, {
    status: "PENDING" | "WAITING" | "RUNNING" | "COMPLETED" | "ERRORED" | "CANCELED";
    name: string;
    id: string;
    noop: boolean;
    idempotencyKey: string;
    attempts: number;
    params?: import("./json.js").DeserializedJson | undefined;
    error?: string | null | undefined;
    context?: import("./json.js").DeserializedJson | undefined;
    style?: {
        style: "normal" | "minimal";
        variant?: string | undefined;
    } | null | undefined;
    icon?: string | null | undefined;
    startedAt?: Date | null | undefined;
    completedAt?: Date | null | undefined;
    delayUntil?: Date | null | undefined;
    description?: string | null | undefined;
    properties?: {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }[] | null | undefined;
    outputProperties?: {
        label: string;
        text: string;
        url?: string | undefined;
        imageUrl?: string[] | undefined;
    }[] | null | undefined;
    output?: import("./json.js").DeserializedJson | undefined;
    parentId?: string | null | undefined;
    operation?: string | null | undefined;
    callbackUrl?: string | null | undefined;
    childExecutionMode?: "SEQUENTIAL" | "PARALLEL" | null | undefined;
    forceYield?: boolean | null | undefined;
}>;
export type ServerTask = z.infer<typeof ServerTaskSchema>;
export declare const CachedTaskSchema: z.ZodObject<{
    id: z.ZodString;
    idempotencyKey: z.ZodString;
    status: z.ZodEnum<["PENDING", "WAITING", "RUNNING", "COMPLETED", "ERRORED", "CANCELED"]>;
    noop: z.ZodDefault<z.ZodBoolean>;
    output: z.ZodNullable<z.ZodOptional<z.ZodType<import("./json.js").DeserializedJson, z.ZodTypeDef, import("./json.js").DeserializedJson>>>;
    parentId: z.ZodNullable<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    status: "PENDING" | "WAITING" | "RUNNING" | "COMPLETED" | "ERRORED" | "CANCELED";
    id: string;
    noop: boolean;
    idempotencyKey: string;
    output?: import("./json.js").DeserializedJson | undefined;
    parentId?: string | null | undefined;
}, {
    status: "PENDING" | "WAITING" | "RUNNING" | "COMPLETED" | "ERRORED" | "CANCELED";
    id: string;
    idempotencyKey: string;
    noop?: boolean | undefined;
    output?: import("./json.js").DeserializedJson | undefined;
    parentId?: string | null | undefined;
}>;
