export type LogLevel = "log" | "error" | "warn" | "info" | "debug";
export declare class Logger {
    #private;
    constructor(name: string, level?: LogLevel, filteredKeys?: string[], jsonReplacer?: (key: string, value: unknown) => unknown, additionalFields?: () => Record<string, unknown>);
    child(fields: Record<string, unknown>): Logger;
    filter(...keys: string[]): Logger;
    static satisfiesLogLevel(logLevel: LogLevel, setLevel: LogLevel): boolean;
    log(message: string, ...args: Array<Record<string, unknown> | undefined>): void;
    error(message: string, ...args: Array<Record<string, unknown> | undefined>): void;
    warn(message: string, ...args: Array<Record<string, unknown> | undefined>): void;
    info(message: string, ...args: Array<Record<string, unknown> | undefined>): void;
    debug(message: string, ...args: Array<Record<string, unknown> | undefined>): void;
}
