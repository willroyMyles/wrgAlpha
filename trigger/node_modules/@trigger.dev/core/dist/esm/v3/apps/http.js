export const getTextBody = (req) => new Promise((resolve) => {
    let body = "";
    req.on("readable", () => {
        const chunk = req.read();
        if (chunk) {
            body += chunk;
        }
    });
    req.on("end", () => {
        resolve(body);
    });
});
export class HttpReply {
    response;
    constructor(response) {
        this.response = response;
    }
    empty(status) {
        return this.response.writeHead(status ?? 200).end();
    }
    text(text, status, contentType) {
        return this.response
            .writeHead(status ?? 200, { "Content-Type": contentType || "text/plain" })
            .end(text.endsWith("\n") ? text : `${text}\n`);
    }
    json(value, pretty) {
        return this.text(JSON.stringify(value, undefined, pretty ? 2 : undefined), 200, "application/json");
    }
}
function getRandomInteger(min, max) {
    const intMin = Math.ceil(min);
    const intMax = Math.floor(max);
    return Math.floor(Math.random() * (intMax - intMin + 1)) + intMin;
}
export function getRandomPortNumber() {
    return getRandomInteger(8000, 9999);
}
//# sourceMappingURL=http.js.map