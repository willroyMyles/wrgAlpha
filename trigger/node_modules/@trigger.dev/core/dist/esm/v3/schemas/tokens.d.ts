import { z } from "zod";
export declare const CreateAuthorizationCodeResponseSchema: z.ZodObject<{
    url: z.ZodString;
    authorizationCode: z.ZodString;
}, "strip", z.ZodTypeAny, {
    url: string;
    authorizationCode: string;
}, {
    url: string;
    authorizationCode: string;
}>;
export type CreateAuthorizationCodeResponse = z.infer<typeof CreateAuthorizationCodeResponseSchema>;
export declare const GetPersonalAccessTokenRequestSchema: z.ZodObject<{
    authorizationCode: z.ZodString;
}, "strip", z.ZodTypeAny, {
    authorizationCode: string;
}, {
    authorizationCode: string;
}>;
export type GetPersonalAccessTokenRequest = z.infer<typeof GetPersonalAccessTokenRequestSchema>;
export declare const GetPersonalAccessTokenResponseSchema: z.ZodObject<{
    token: z.ZodNullable<z.ZodObject<{
        token: z.ZodString;
        obfuscatedToken: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        token: string;
        obfuscatedToken: string;
    }, {
        token: string;
        obfuscatedToken: string;
    }>>;
}, "strip", z.ZodTypeAny, {
    token: {
        token: string;
        obfuscatedToken: string;
    } | null;
}, {
    token: {
        token: string;
        obfuscatedToken: string;
    } | null;
}>;
export type GetPersonalAccessTokenResponse = z.infer<typeof GetPersonalAccessTokenResponseSchema>;
