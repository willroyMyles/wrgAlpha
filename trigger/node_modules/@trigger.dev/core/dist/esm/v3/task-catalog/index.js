const API_NAME = "task-catalog";
import { getGlobal, registerGlobal, unregisterGlobal } from "../utils/globals.js";
import { NoopTaskCatalog } from "./noopTaskCatalog.js";
const NOOP_TASK_CATALOG = new NoopTaskCatalog();
export class TaskCatalogAPI {
    static _instance;
    constructor() { }
    static getInstance() {
        if (!this._instance) {
            this._instance = new TaskCatalogAPI();
        }
        return this._instance;
    }
    setGlobalTaskCatalog(taskCatalog) {
        return registerGlobal(API_NAME, taskCatalog);
    }
    disable() {
        unregisterGlobal(API_NAME);
    }
    registerTaskMetadata(task) {
        this.#getCatalog().registerTaskMetadata(task);
    }
    updateTaskMetadata(id, updates) {
        this.#getCatalog().updateTaskMetadata(id, updates);
    }
    registerTaskFileMetadata(id, metadata) {
        this.#getCatalog().registerTaskFileMetadata(id, metadata);
    }
    listTaskManifests() {
        return this.#getCatalog().listTaskManifests();
    }
    getTaskManifest(id) {
        return this.#getCatalog().getTaskManifest(id);
    }
    getTask(id) {
        return this.#getCatalog().getTask(id);
    }
    taskExists(id) {
        return this.#getCatalog().taskExists(id);
    }
    #getCatalog() {
        return getGlobal(API_NAME) ?? NOOP_TASK_CATALOG;
    }
}
//# sourceMappingURL=index.js.map