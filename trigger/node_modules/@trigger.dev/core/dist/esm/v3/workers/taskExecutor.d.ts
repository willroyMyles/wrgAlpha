import { ConsoleInterceptor } from "../consoleInterceptor.js";
import { TriggerConfig } from "../index.js";
import { TracingSDK } from "../otel/index.js";
import { ServerBackgroundWorker, TaskRunExecution, TaskRunExecutionResult } from "../schemas/index.js";
import { TriggerTracer } from "../tracer.js";
import { HandleErrorFunction, TaskMetadataWithFunctions } from "../types/index.js";
import { UsageMeasurement } from "../usage/types.js";
export type TaskExecutorOptions = {
    tracingSDK: TracingSDK;
    tracer: TriggerTracer;
    consoleInterceptor: ConsoleInterceptor;
    config: TriggerConfig | undefined;
    handleErrorFn: HandleErrorFunction | undefined;
};
export declare class TaskExecutor {
    #private;
    task: TaskMetadataWithFunctions;
    private _tracingSDK;
    private _tracer;
    private _consoleInterceptor;
    private _importedConfig;
    private _handleErrorFn;
    constructor(task: TaskMetadataWithFunctions, options: TaskExecutorOptions);
    execute(execution: TaskRunExecution, worker: ServerBackgroundWorker, traceContext: Record<string, unknown>, usage: UsageMeasurement): Promise<{
        result: TaskRunExecutionResult;
    }>;
}
