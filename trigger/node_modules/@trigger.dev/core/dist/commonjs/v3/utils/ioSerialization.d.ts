import { Attributes } from "@opentelemetry/api";
import { TriggerTracer } from "../tracer.js";
export type IOPacket = {
    data?: string | undefined;
    dataType: string;
};
export declare function parsePacket(value: IOPacket): Promise<any>;
export declare function stringifyIO(value: any): Promise<IOPacket>;
export declare function conditionallyExportPacket(packet: IOPacket, pathPrefix: string, tracer?: TriggerTracer): Promise<IOPacket>;
export declare function packetRequiresOffloading(packet: IOPacket, lengthLimit?: number): {
    needsOffloading: boolean;
    size: number;
};
export declare function conditionallyImportPacket(packet: IOPacket, tracer?: TriggerTracer): Promise<IOPacket>;
export declare function resolvePresignedPacketUrl(url: string, tracer?: TriggerTracer): Promise<any | undefined>;
export declare function createPacketAttributes(packet: IOPacket, dataKey: string, dataTypeKey: string): Promise<Attributes | undefined>;
export declare function createPacketAttributesAsJson(data: any, dataType: string): Promise<Attributes>;
export declare function prettyPrintPacket(rawData: any, dataType?: string): Promise<string>;
export declare function replaceSuperJsonPayload(original: string, newPayload: string): Promise<unknown>;
