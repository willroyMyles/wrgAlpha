import { UsageManager, UsageMeasurement, UsageSample } from "./types.js";
export type ProdUsageManagerOptions = {
    heartbeatIntervalMs?: number;
    url?: string;
    jwt?: string;
};
export declare class ProdUsageManager implements UsageManager {
    #private;
    private readonly delegageUsageManager;
    private readonly options;
    private _measurement;
    private _abortController;
    private _lastSample;
    private _usageClient;
    constructor(delegageUsageManager: UsageManager, options: ProdUsageManagerOptions);
    get isReportingEnabled(): boolean;
    disable(): void;
    sample(): UsageSample | undefined;
    start(): UsageMeasurement;
    stop(measurement: UsageMeasurement): UsageSample;
    pauseAsync<T>(cb: () => Promise<T>): Promise<T>;
    flush(): Promise<void>;
}
