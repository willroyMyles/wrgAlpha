"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.testDockerCheckpoint = testDockerCheckpoint;
const node_crypto_1 = require("node:crypto");
const isExecaChildProcess_js_1 = require("./isExecaChildProcess.js");
async function testDockerCheckpoint() {
    const { $ } = await import("execa");
    try {
        // Create a dummy container
        const container = await $ `docker run -d --rm --name init-dummy-${(0, node_crypto_1.randomUUID)()} docker.io/library/busybox sleep 10`;
        // Checkpoint it
        await $ `docker checkpoint create ${container} init-check`;
    }
    catch (error) {
        if (!(0, isExecaChildProcess_js_1.isExecaChildProcess)(error)) {
            return {
                ok: false,
                message: "No checkpoint support: Unknown error.",
                error,
            };
        }
        if (error.stderr.includes("criu")) {
            if (error.stderr.includes("executable file not found")) {
                return {
                    ok: false,
                    message: "No checkpoint support: Missing CRIU binary.",
                };
            }
            return {
                ok: false,
                message: "No checkpoint support: Unknown CRIU error.",
                error,
            };
        }
        if (error.stderr.includes("experimental features enabled")) {
            return {
                ok: false,
                message: "No checkpoint support: Please enable docker experimental features.",
            };
        }
        return {
            ok: false,
            message: "No checkpoint support: Unknown execa error.",
            error,
        };
    }
    return {
        ok: true,
    };
}
//# sourceMappingURL=checkpoints.js.map