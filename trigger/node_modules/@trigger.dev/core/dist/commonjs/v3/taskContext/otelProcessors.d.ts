import { LogRecord, LogRecordProcessor } from "@opentelemetry/sdk-logs";
import { Span, SpanProcessor } from "@opentelemetry/sdk-trace-base";
import { Context } from "@opentelemetry/api";
export declare class TaskContextSpanProcessor implements SpanProcessor {
    private _innerProcessor;
    constructor(innerProcessor: SpanProcessor);
    onStart(span: Span, parentContext: Context): void;
    onEnd(span: Span): void;
    shutdown(): Promise<void>;
    forceFlush(): Promise<void>;
}
export declare class TaskContextLogProcessor implements LogRecordProcessor {
    private _innerProcessor;
    constructor(innerProcessor: LogRecordProcessor);
    forceFlush(): Promise<void>;
    onEmit(logRecord: LogRecord, context?: Context | undefined): void;
    shutdown(): Promise<void>;
}
