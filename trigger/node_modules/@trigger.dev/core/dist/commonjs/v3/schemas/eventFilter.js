"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventFilter = exports.stringPatternMatchers = void 0;
const zod_1 = require("zod");
exports.stringPatternMatchers = [
    zod_1.z.object({
        $endsWith: zod_1.z.string(),
    }),
    zod_1.z.object({
        $startsWith: zod_1.z.string(),
    }),
    zod_1.z.object({
        $ignoreCaseEquals: zod_1.z.string(),
    }),
];
const EventMatcher = zod_1.z.union([
    /** Match against a string */
    zod_1.z.array(zod_1.z.string()),
    /** Match against a number */
    zod_1.z.array(zod_1.z.number()),
    /** Match against a boolean */
    zod_1.z.array(zod_1.z.boolean()),
    zod_1.z.array(zod_1.z.union([
        ...exports.stringPatternMatchers,
        zod_1.z.object({
            $exists: zod_1.z.boolean(),
        }),
        zod_1.z.object({
            $isNull: zod_1.z.boolean(),
        }),
        zod_1.z.object({
            $anythingBut: zod_1.z.union([zod_1.z.string(), zod_1.z.number(), zod_1.z.boolean()]),
        }),
        zod_1.z.object({
            $anythingBut: zod_1.z.union([zod_1.z.array(zod_1.z.string()), zod_1.z.array(zod_1.z.number()), zod_1.z.array(zod_1.z.boolean())]),
        }),
        zod_1.z.object({
            $gt: zod_1.z.number(),
        }),
        zod_1.z.object({
            $lt: zod_1.z.number(),
        }),
        zod_1.z.object({
            $gte: zod_1.z.number(),
        }),
        zod_1.z.object({
            $lte: zod_1.z.number(),
        }),
        zod_1.z.object({
            $between: zod_1.z.tuple([zod_1.z.number(), zod_1.z.number()]),
        }),
        zod_1.z.object({
            $includes: zod_1.z.union([zod_1.z.string(), zod_1.z.number(), zod_1.z.boolean()]),
        }),
        zod_1.z.object({
            $not: zod_1.z.union([zod_1.z.string(), zod_1.z.number(), zod_1.z.boolean()]),
        }),
    ])),
]);
exports.EventFilter = zod_1.z.lazy(() => zod_1.z.record(zod_1.z.union([EventMatcher, exports.EventFilter])));
//# sourceMappingURL=eventFilter.js.map