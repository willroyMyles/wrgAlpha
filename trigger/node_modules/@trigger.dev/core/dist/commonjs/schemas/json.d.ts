import { z } from "zod";
declare const LiteralSchema: z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean, z.ZodNull]>;
type Literal = z.infer<typeof LiteralSchema>;
export type DeserializedJson = Literal | {
    [key: string]: DeserializedJson;
} | DeserializedJson[];
export declare const DeserializedJsonSchema: z.ZodType<DeserializedJson>;
declare const SerializableSchema: z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean, z.ZodNull, z.ZodDate, z.ZodUndefined, z.ZodSymbol]>;
type Serializable = z.infer<typeof SerializableSchema>;
export type SerializableJson = Serializable | {
    [key: string]: SerializableJson;
} | SerializableJson[];
export declare const SerializableJsonSchema: z.ZodType<SerializableJson>;
export {};
