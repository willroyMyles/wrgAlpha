"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TriggerMetadataSchema = exports.ScheduledTriggerMetadataSchema = exports.InvokeTriggerMetadataSchema = exports.StaticTriggerMetadataSchema = exports.TriggerHelpSchema = exports.DynamicTriggerMetadataSchema = exports.EventSpecificationSchema = exports.EventExampleSchema = void 0;
const zod_1 = require("zod");
const eventFilter_js_1 = require("./eventFilter.js");
const properties_js_1 = require("./properties.js");
const schedules_js_1 = require("./schedules.js");
exports.EventExampleSchema = zod_1.z.object({
    id: zod_1.z.string(),
    icon: zod_1.z.string().optional(),
    name: zod_1.z.string(),
    payload: zod_1.z.any(),
});
exports.EventSpecificationSchema = zod_1.z.object({
    name: zod_1.z.string().or(zod_1.z.array(zod_1.z.string())),
    title: zod_1.z.string(),
    source: zod_1.z.string(),
    icon: zod_1.z.string(),
    filter: eventFilter_js_1.EventFilterSchema.optional(),
    properties: zod_1.z.array(properties_js_1.DisplayPropertySchema).optional(),
    schema: zod_1.z.any().optional(),
    examples: zod_1.z.array(exports.EventExampleSchema).optional(),
});
exports.DynamicTriggerMetadataSchema = zod_1.z.object({
    type: zod_1.z.literal("dynamic"),
    id: zod_1.z.string(),
});
exports.TriggerHelpSchema = zod_1.z.object({
    noRuns: zod_1.z
        .object({
        text: zod_1.z.string(),
        link: zod_1.z.string().optional(),
    })
        .optional(),
});
exports.StaticTriggerMetadataSchema = zod_1.z.object({
    type: zod_1.z.literal("static"),
    title: zod_1.z.union([zod_1.z.string(), zod_1.z.array(zod_1.z.string())]),
    properties: zod_1.z.array(properties_js_1.DisplayPropertySchema).optional(),
    rule: eventFilter_js_1.EventRuleSchema,
    link: zod_1.z.string().optional(),
    help: exports.TriggerHelpSchema.optional(),
});
exports.InvokeTriggerMetadataSchema = zod_1.z.object({
    type: zod_1.z.literal("invoke"),
});
exports.ScheduledTriggerMetadataSchema = zod_1.z.object({
    type: zod_1.z.literal("scheduled"),
    schedule: schedules_js_1.ScheduleMetadataSchema,
});
exports.TriggerMetadataSchema = zod_1.z.discriminatedUnion("type", [
    exports.DynamicTriggerMetadataSchema,
    exports.StaticTriggerMetadataSchema,
    exports.ScheduledTriggerMetadataSchema,
    exports.InvokeTriggerMetadataSchema,
]);
//# sourceMappingURL=triggers.js.map