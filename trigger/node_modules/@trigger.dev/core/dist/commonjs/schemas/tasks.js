"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CachedTaskSchema = exports.ServerTaskSchema = exports.TaskSchema = exports.TaskStatusSchema = void 0;
const zod_1 = require("zod");
const properties_js_1 = require("./properties.js");
const json_js_1 = require("./json.js");
exports.TaskStatusSchema = zod_1.z.enum([
    "PENDING",
    "WAITING",
    "RUNNING",
    "COMPLETED",
    "ERRORED",
    "CANCELED",
]);
exports.TaskSchema = zod_1.z.object({
    id: zod_1.z.string(),
    name: zod_1.z.string(),
    icon: zod_1.z.string().optional().nullable(),
    noop: zod_1.z.boolean(),
    startedAt: zod_1.z.coerce.date().optional().nullable(),
    completedAt: zod_1.z.coerce.date().optional().nullable(),
    delayUntil: zod_1.z.coerce.date().optional().nullable(),
    status: exports.TaskStatusSchema,
    description: zod_1.z.string().optional().nullable(),
    properties: zod_1.z.array(properties_js_1.DisplayPropertySchema).optional().nullable(),
    outputProperties: zod_1.z.array(properties_js_1.DisplayPropertySchema).optional().nullable(),
    params: json_js_1.DeserializedJsonSchema.optional().nullable(),
    output: json_js_1.DeserializedJsonSchema.optional().nullable(),
    context: json_js_1.DeserializedJsonSchema.optional().nullable(),
    error: zod_1.z.string().optional().nullable(),
    parentId: zod_1.z.string().optional().nullable(),
    style: properties_js_1.StyleSchema.optional().nullable(),
    operation: zod_1.z.string().optional().nullable(),
    callbackUrl: zod_1.z.string().optional().nullable(),
    childExecutionMode: zod_1.z.enum(["SEQUENTIAL", "PARALLEL"]).optional().nullable(),
});
exports.ServerTaskSchema = exports.TaskSchema.extend({
    idempotencyKey: zod_1.z.string(),
    attempts: zod_1.z.number(),
    forceYield: zod_1.z.boolean().optional().nullable(),
});
exports.CachedTaskSchema = zod_1.z.object({
    id: zod_1.z.string(),
    idempotencyKey: zod_1.z.string(),
    status: exports.TaskStatusSchema,
    noop: zod_1.z.boolean().default(false),
    output: json_js_1.DeserializedJsonSchema.optional().nullable(),
    parentId: zod_1.z.string().optional().nullable(),
});
//# sourceMappingURL=tasks.js.map